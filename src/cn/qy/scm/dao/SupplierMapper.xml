<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.qy.scm.dao.ISupplierDao">

    <resultMap type="cn.qy.scm.entity.Supplier" id="supplierMapper">
        <id property="id" column="sup_id"/>
        <result property="name" column="sup_name"/>
        <result property="linkman" column="sup_linkman"/>
        <result property="phone" column="sup_phone"/>
        <result property="address" column="sup_address"/>
        <result property="remark" column="sup_remark"/>
    </resultMap>

    <insert id="insert" parameterType="cn.qy.scm.entity.Supplier">
        insert into supplier (sup_id,sup_name,sup_linkman,sup_phone,sup_address,sup_remark) values (#{id},#{name},#{linkman},#{linkman},#{address},#{remark})

    </insert>
    <select id="selectById" parameterType="cn.qy.scm.entity.Supplier" resultMap="supplierMapper">
        SELECT * FROM supplier WHERE sup_id == #{id}
    </select>

    <select id="findAll" resultMap="supplierMapper">
        SELECT * FROM supplier
    </select>

    <update id="updateById" parameterType="cn.qy.scm.entity.Supplier">
        update supplier set sup_name = #{name}, sup_phone = #{phone},sup_linkman = #{linkman},sup_address=#{address},sup_remark=#{remark}  WHERE sup_id =#{id}
    </update>


    <!--1. 如果传入的是单参数且参数类型是一个List的时候，collection属性值为list-->
    <!--2. 如果传入的是单参数且参数类型是一个array数组的时候，collection的属性值为array-->
    <!--3. 如果传入的参数是多个的时候，我们就需要把它们封装成一个Map了，当然单参数也可-->
    <delete id="deleteById">
        DELETE FROM supplier WHERE sup_id IN
        <foreach collection="array" open="(" close=")" separator="," item="pk">
            #{pk}
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE * FROM supplier
    </delete>


    <select id="pagination" parameterType="cn.qy.scm.entity.Pagination" resultMap="supplierMapper" >
        SELECT * FROM (SELECT S.*, ROWNUM R FROM (select * FROM supplier
        <where>
            <if test="keywords != null">
                and sup_name LIKE #{keywords}
            </if>
        </where>
        ) S WHERE ROWNUM &lt;= #{startNext} + #{rows} ) WHERE R >= #{startNext}+1
    </select>

    <select id="count" parameterType="cn.qy.scm.entity.Pagination" resultType="int">
        SELECT COUNT (1) FROM supplier
        <where>
            <if test="keywords != null">
                and sup_name LIKE #{keywords}
            </if>
        </where>
    </select>
</mapper>