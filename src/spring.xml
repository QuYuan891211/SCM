<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:mvc="http://www.springframework.org/schema/mvc"

        xsi:schemaLocation="

	  http://www.springframework.org/schema/beans
	  http://www.springframework.org/schema/beans/spring-beans-3.2.xsd

	  http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.2.xsd

	  http://www.springframework.org/schema/aop
	  http://www.springframework.org/schema/aop/spring-aop-3.2.xsd

	  http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-3.2.xsd

      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd

      ">

    <context:property-placeholder location="classpath:cn/qy/scm/resources/db.propertie"></context:property-placeholder>

<!--1. configure data source-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${oracle.driver}"></property>
        <property name="jdbcUrl" value="${oracle.url}"></property>
        <property name="user" value="${oracle.username}"></property>
        <property name="password" value="${oracle.password}"></property>
    </bean>

<!--2. configure session factory  -->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:myBatis-config.xml"></property>
        <!--配置扫描式加载SQL映射文件,记得去掉mybatis-config配置-->
        <property name="mapperLocations" value="classpath:cn/qy/scm/dao/*.xml"/>
    </bean>

    <!--3. configure transaction-->
   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
       <property name="dataSource" ref="dataSource"></property>
   </bean>

    <!--configure advice-->
   <tx:advice id="advisor" transaction-manager="transactionManager">
       <tx:attributes>
           <tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
           <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
           <tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>
       </tx:attributes>
   </tx:advice>

    <!--configure aop-->
<aop:config>
    <aop:advisor advice-ref="advisor" pointcut="execution(* cn.qy.scm.service.impl.*.*(..))"/>
</aop:config>

    <!--(Spring + mybatis)-->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sessionFactory"></constructor-arg>
    </bean>


    <context:component-scan base-package="cn.qy">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:exclude-filter>
    </context:component-scan>


    <!--引入以后报错Request processing failed; nested exception is org.springframework.transaction.-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--<property name="sqlSessionFactoryBeanName" value="sessionFactory"></property>-->
        <property name="basePackage" value="cn.qy.scm.dao"/>
    </bean>
</beans>
